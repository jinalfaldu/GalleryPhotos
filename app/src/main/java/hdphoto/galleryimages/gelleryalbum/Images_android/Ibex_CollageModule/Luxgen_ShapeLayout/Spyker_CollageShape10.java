package hdphoto.galleryimages.gelleryalbum.Images_android.Ibex_CollageModule.Luxgen_ShapeLayout;

import android.graphics.PointF;
import java.util.ArrayList;


public class Spyker_CollageShape10 extends Spyker_CollageShapeUtils {
    public static int shapeCount = 10;

    public Spyker_CollageShape10(int i, int i2) {
        this.collageLayoutList = new ArrayList();
        new ArrayList();
        ArrayList arrayList = new ArrayList();
        float f = i;
        float f2 = f * 0.0f;
        float f3 = i2;
        float f4 = 0.0f * f3;
        float f5 = f * 0.5f;
        float f6 = f3 * 0.25f;
        arrayList.add(new PointF[]{new PointF(f2, f4), new PointF(f5, f4), new PointF(f5, f6), new PointF(f2, f6)});
        float f7 = f * 1.0f;
        arrayList.add(new PointF[]{new PointF(f5, f4), new PointF(f7, f4), new PointF(f7, f6), new PointF(f5, f6)});
        float f8 = 0.25f * f;
        float f9 = 0.5f * f3;
        arrayList.add(new PointF[]{new PointF(f2, f6), new PointF(f8, f6), new PointF(f8, f9), new PointF(f2, f9)});
        float f10 = f * 0.75f;
        arrayList.add(new PointF[]{new PointF(f8, f6), new PointF(f10, f6), new PointF(f10, f9), new PointF(f8, f9)});
        arrayList.add(new PointF[]{new PointF(f10, f6), new PointF(f7, f6), new PointF(f7, f9), new PointF(f10, f9)});
        float f11 = 0.75f * f3;
        arrayList.add(new PointF[]{new PointF(f2, f9), new PointF(f8, f9), new PointF(f8, f11), new PointF(f2, f11)});
        arrayList.add(new PointF[]{new PointF(f8, f9), new PointF(f10, f9), new PointF(f10, f11), new PointF(f8, f11)});
        arrayList.add(new PointF[]{new PointF(f10, f9), new PointF(f7, f9), new PointF(f7, f11), new PointF(f10, f11)});
        float f12 = 1.0f * f3;
        arrayList.add(new PointF[]{new PointF(f2, f11), new PointF(f5, f11), new PointF(f5, f12), new PointF(f2, f12)});
        arrayList.add(new PointF[]{new PointF(f5, f11), new PointF(f7, f11), new PointF(f7, f12), new PointF(f5, f12)});
        this.collageLayoutList.add(new Rabbit_CollageLayout(arrayList));
        ArrayList arrayList2 = new ArrayList();
        arrayList2.add(new PointF[]{new PointF(f2, f4), new PointF(f5, f4), new PointF(f5, f9), new PointF(f2, f9)});
        arrayList2.add(new PointF[]{new PointF(f2, f9), new PointF(f5, f9), new PointF(f5, f12), new PointF(f2, f12)});
        arrayList2.add(new PointF[]{new PointF(f5, f4), new PointF(f10, f4), new PointF(f10, f6), new PointF(f5, f6)});
        arrayList2.add(new PointF[]{new PointF(f10, f6), new PointF(f10, f9), new PointF(f5, f9), new PointF(f5, f6)});
        arrayList2.add(new PointF[]{new PointF(f10, f9), new PointF(f10, f11), new PointF(f5, f11), new PointF(f5, f9)});
        arrayList2.add(new PointF[]{new PointF(f10, f11), new PointF(f10, f12), new PointF(f5, f12), new PointF(f5, f11)});
        arrayList2.add(new PointF[]{new PointF(f10, f4), new PointF(f7, f4), new PointF(f7, f6), new PointF(f10, f6)});
        arrayList2.add(new PointF[]{new PointF(f7, f6), new PointF(f7, f9), new PointF(f10, f9), new PointF(f10, f6)});
        arrayList2.add(new PointF[]{new PointF(f10, f9), new PointF(f7, f9), new PointF(f7, f11), new PointF(f10, f11)});
        arrayList2.add(new PointF[]{new PointF(f10, f11), new PointF(f7, f11), new PointF(f7, f12), new PointF(f10, f12)});
        Rabbit_CollageLayout cMCollageLayout = new Rabbit_CollageLayout(arrayList2);
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(0, 0));
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(1, 0));
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(2, 0));
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(3, 0));
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(4, 0));
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(5, 0));
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(6, 0));
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(7, 0));
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(8, 0));
        cMCollageLayout.maskPairListSvg.add(new Spyker_MaskPairSvg(9, 0));
        cMCollageLayout.useLine = false;
        this.collageLayoutList.add(cMCollageLayout);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(new PointF[]{new PointF(f2, f4), new PointF(f5, f4), new PointF(f5, f6), new PointF(f2, f6)});
        arrayList3.add(new PointF[]{new PointF(f5, f4), new PointF(f7, f4), new PointF(f7, f6), new PointF(f5, f6)});
        arrayList3.add(new PointF[]{new PointF(f2, f6), new PointF(f8, f6), new PointF(f8, f11), new PointF(f2, f11)});
        arrayList3.add(new PointF[]{new PointF(f8, f6), new PointF(f5, f6), new PointF(f5, f9), new PointF(f8, f9)});
        arrayList3.add(new PointF[]{new PointF(f5, f9), new PointF(f5, f11), new PointF(f8, f11), new PointF(f8, f9)});
        arrayList3.add(new PointF[]{new PointF(f5, f6), new PointF(f10, f6), new PointF(f10, f9), new PointF(f5, f9)});
        arrayList3.add(new PointF[]{new PointF(f5, f9), new PointF(f10, f9), new PointF(f10, f11), new PointF(f5, f11)});
        arrayList3.add(new PointF[]{new PointF(f10, f6), new PointF(f7, f6), new PointF(f7, f11), new PointF(f10, f11)});
        arrayList3.add(new PointF[]{new PointF(f2, f11), new PointF(f5, f11), new PointF(f5, f12), new PointF(f2, f12)});
        arrayList3.add(new PointF[]{new PointF(f5, f11), new PointF(f7, f11), new PointF(f7, f12), new PointF(f5, f12)});
        this.collageLayoutList.add(new Rabbit_CollageLayout(arrayList3));
        ArrayList arrayList4 = new ArrayList();
        arrayList4.add(new PointF[]{new PointF(f2, f4), new PointF(f8, f4), new PointF(f8, f6), new PointF(f2, f6)});
        arrayList4.add(new PointF[]{new PointF(f8, f4), new PointF(f7, f4), new PointF(f7, f6), new PointF(f8, f6)});
        arrayList4.add(new PointF[]{new PointF(f2, f6), new PointF(f8, f6), new PointF(f8, f9), new PointF(f2, f9)});
        float f13 = f * 0.6666667f;
        arrayList4.add(new PointF[]{new PointF(f8, f6), new PointF(f13, f6), new PointF(f13, f9), new PointF(f8, f9)});
        arrayList4.add(new PointF[]{new PointF(f13, f6), new PointF(f7, f6), new PointF(f7, f9), new PointF(f13, f9)});
        arrayList4.add(new PointF[]{new PointF(f2, f9), new PointF(f8, f9), new PointF(f8, f11), new PointF(f2, f11)});
        arrayList4.add(new PointF[]{new PointF(f8, f9), new PointF(f13, f9), new PointF(f13, f11), new PointF(f8, f11)});
        arrayList4.add(new PointF[]{new PointF(f13, f9), new PointF(f7, f9), new PointF(f7, f11), new PointF(f13, f11)});
        arrayList4.add(new PointF[]{new PointF(f2, f11), new PointF(f13, f11), new PointF(f13, f12), new PointF(f2, f12)});
        arrayList4.add(new PointF[]{new PointF(f13, f11), new PointF(f7, f11), new PointF(f7, f12), new PointF(f13, f12)});
        this.collageLayoutList.add(new Rabbit_CollageLayout(arrayList4));
        ArrayList arrayList5 = new ArrayList();
        arrayList5.add(new PointF[]{new PointF(f2, f4), new PointF(f8, f4), new PointF(f8, f6), new PointF(f2, f6)});
        arrayList5.add(new PointF[]{new PointF(f8, f4), new PointF(f7, f4), new PointF(f7, f6), new PointF(f8, f6)});
        arrayList5.add(new PointF[]{new PointF(f2, f6), new PointF(f8, f6), new PointF(f8, f9), new PointF(f2, f9)});
        arrayList5.add(new PointF[]{new PointF(f8, f9), new PointF(f8, f11), new PointF(f2, f11), new PointF(f2, f9)});
        arrayList5.add(new PointF[]{new PointF(f8, f6), new PointF(f5, f6), new PointF(f5, f11), new PointF(f8, f11)});
        arrayList5.add(new PointF[]{new PointF(f5, f6), new PointF(f10, f6), new PointF(f10, f11), new PointF(f5, f11)});
        arrayList5.add(new PointF[]{new PointF(f10, f6), new PointF(f7, f6), new PointF(f7, f9), new PointF(f10, f9)});
        arrayList5.add(new PointF[]{new PointF(f7, f9), new PointF(f7, f11), new PointF(f10, f11), new PointF(f10, f9)});
        arrayList5.add(new PointF[]{new PointF(f2, f11), new PointF(f10, f11), new PointF(f10, f12), new PointF(f2, f12)});
        arrayList5.add(new PointF[]{new PointF(f10, f11), new PointF(f7, f11), new PointF(f7, f12), new PointF(f10, f12)});
        this.collageLayoutList.add(new Rabbit_CollageLayout(arrayList5));
        ArrayList arrayList6 = new ArrayList();
        arrayList6.add(new PointF[]{new PointF(f2, f4), new PointF(f8, f4), new PointF(f8, f6), new PointF(f2, f6)});
        arrayList6.add(new PointF[]{new PointF(f8, f4), new PointF(f10, f4), new PointF(f10, f6), new PointF(f8, f6)});
        arrayList6.add(new PointF[]{new PointF(f10, f4), new PointF(f7, f4), new PointF(f7, f6), new PointF(f10, f6)});
        arrayList6.add(new PointF[]{new PointF(f2, f6), new PointF(f8, f6), new PointF(f8, f11), new PointF(f2, f11)});
        arrayList6.add(new PointF[]{new PointF(f8, f6), new PointF(f10, f6), new PointF(f10, f9), new PointF(f8, f9)});
        arrayList6.add(new PointF[]{new PointF(f10, f6), new PointF(f7, f6), new PointF(f7, f11), new PointF(f10, f11)});
        arrayList6.add(new PointF[]{new PointF(f8, f9), new PointF(f10, f9), new PointF(f10, f11), new PointF(f8, f11)});
        arrayList6.add(new PointF[]{new PointF(f2, f11), new PointF(f8, f11), new PointF(f8, f12), new PointF(f2, f12)});
        arrayList6.add(new PointF[]{new PointF(f8, f11), new PointF(f10, f11), new PointF(f10, f12), new PointF(f8, f12)});
        arrayList6.add(new PointF[]{new PointF(f10, f11), new PointF(f7, f11), new PointF(f7, f12), new PointF(f10, f12)});
        this.collageLayoutList.add(new Rabbit_CollageLayout(arrayList6));
        ArrayList arrayList7 = new ArrayList();
        float f14 = f3 * 0.3333333f;
        arrayList7.add(new PointF[]{new PointF(f2, f4), new PointF(f8, f4), new PointF(f8, f14), new PointF(f2, f14)});
        arrayList7.add(new PointF[]{new PointF(f8, f4), new PointF(f10, f4), new PointF(f10, f14), new PointF(f8, f14)});
        arrayList7.add(new PointF[]{new PointF(f10, f4), new PointF(f7, f4), new PointF(f7, f14), new PointF(f10, f14)});
        float f15 = 0.6666667f * f3;
        arrayList7.add(new PointF[]{new PointF(f2, f14), new PointF(f8, f14), new PointF(f8, f15), new PointF(f2, f15)});
        arrayList7.add(new PointF[]{new PointF(f8, f14), new PointF(f5, f14), new PointF(f5, f15), new PointF(f8, f15)});
        arrayList7.add(new PointF[]{new PointF(f5, f14), new PointF(f10, f14), new PointF(f10, f15), new PointF(f5, f15)});
        arrayList7.add(new PointF[]{new PointF(f10, f14), new PointF(f7, f14), new PointF(f7, f15), new PointF(f10, f15)});
        arrayList7.add(new PointF[]{new PointF(f2, f15), new PointF(f8, f15), new PointF(f8, f12), new PointF(f2, f12)});
        arrayList7.add(new PointF[]{new PointF(f8, f15), new PointF(f10, f15), new PointF(f10, f12), new PointF(f8, f12)});
        arrayList7.add(new PointF[]{new PointF(f10, f15), new PointF(f7, f15), new PointF(f7, f12), new PointF(f10, f12)});
        this.collageLayoutList.add(new Rabbit_CollageLayout(arrayList7));
        ArrayList arrayList8 = new ArrayList();
        arrayList8.add(new PointF[]{new PointF(f2, f4), new PointF(f5, f4), new PointF(f5, f9), new PointF(f2, f9)});
        arrayList8.add(new PointF[]{new PointF(f5, f4), new PointF(f7, f4), new PointF(f7, f9), new PointF(f5, f9)});
        arrayList8.add(new PointF[]{new PointF(f2, f9), new PointF(f8, f9), new PointF(f8, f11), new PointF(f2, f11)});
        arrayList8.add(new PointF[]{new PointF(f8, f9), new PointF(f5, f9), new PointF(f5, f11), new PointF(f8, f11)});
        arrayList8.add(new PointF[]{new PointF(f5, f9), new PointF(f10, f9), new PointF(f10, f11), new PointF(f5, f11)});
        arrayList8.add(new PointF[]{new PointF(f10, f9), new PointF(f7, f9), new PointF(f7, f11), new PointF(f10, f11)});
        arrayList8.add(new PointF[]{new PointF(f2, f11), new PointF(f8, f11), new PointF(f8, f12), new PointF(f2, f12)});
        arrayList8.add(new PointF[]{new PointF(f8, f11), new PointF(f5, f11), new PointF(f5, f12), new PointF(f8, f12)});
        arrayList8.add(new PointF[]{new PointF(f5, f11), new PointF(f10, f11), new PointF(f10, f12), new PointF(f5, f12)});
        arrayList8.add(new PointF[]{new PointF(f10, f11), new PointF(f7, f11), new PointF(f7, f12), new PointF(f10, f12)});
        this.collageLayoutList.add(new Rabbit_CollageLayout(arrayList8));
        ArrayList arrayList9 = new ArrayList();
        arrayList9.add(new PointF[]{new PointF(f2, f4), new PointF(f13, f4), new PointF(f13, f14), new PointF(f2, f14)});
        arrayList9.add(new PointF[]{new PointF(f2, f14), new PointF(f13, f14), new PointF(f13, f15), new PointF(f2, f15)});
        float f16 = 0.3333333f * f;
        float f17 = f3 * 0.8333333f;
        arrayList9.add(new PointF[]{new PointF(f2, f15), new PointF(f16, f15), new PointF(f16, f17), new PointF(f2, f17)});
        arrayList9.add(new PointF[]{new PointF(f2, f17), new PointF(f16, f17), new PointF(f16, f12), new PointF(f2, f12)});
        arrayList9.add(new PointF[]{new PointF(f16, f15), new PointF(f13, f15), new PointF(f13, f12), new PointF(f16, f12)});
        arrayList9.add(new PointF[]{new PointF(f13, f4), new PointF(f7, f4), new PointF(f7, f14), new PointF(f13, f14)});
        float f18 = 0.8333333f * f;
        arrayList9.add(new PointF[]{new PointF(f13, f14), new PointF(f18, f14), new PointF(f18, f15), new PointF(f13, f15)});
        arrayList9.add(new PointF[]{new PointF(f18, f14), new PointF(f7, f14), new PointF(f7, f15), new PointF(f18, f15)});
        arrayList9.add(new PointF[]{new PointF(f13, f15), new PointF(f7, f15), new PointF(f7, f17), new PointF(f13, f17)});
        arrayList9.add(new PointF[]{new PointF(f13, f17), new PointF(f7, f17), new PointF(f7, f12), new PointF(f13, f12)});
        this.collageLayoutList.add(new Rabbit_CollageLayout(arrayList9));
        ArrayList arrayList10 = new ArrayList();
        arrayList10.add(new PointF[]{new PointF(f2, f4), new PointF(f5, f4), new PointF(f5, f9), new PointF(f2, f9)});
        arrayList10.add(new PointF[]{new PointF(f2, f9), new PointF(f5, f9), new PointF(f5, f12), new PointF(f2, f12)});
        arrayList10.add(new PointF[]{new PointF(f5, f4), new PointF(f10, f4), new PointF(f10, f6), new PointF(f5, f6)});
        arrayList10.add(new PointF[]{new PointF(f10, f6), new PointF(f10, f9), new PointF(f5, f9), new PointF(f5, f6)});
        arrayList10.add(new PointF[]{new PointF(f10, f9), new PointF(f10, f11), new PointF(f5, f11), new PointF(f5, f9)});
        arrayList10.add(new PointF[]{new PointF(f10, f11), new PointF(f10, f12), new PointF(f5, f12), new PointF(f5, f11)});
        arrayList10.add(new PointF[]{new PointF(f10, f4), new PointF(f7, f4), new PointF(f7, f6), new PointF(f10, f6)});
        arrayList10.add(new PointF[]{new PointF(f7, f6), new PointF(f7, f9), new PointF(f10, f9), new PointF(f10, f6)});
        arrayList10.add(new PointF[]{new PointF(f10, f9), new PointF(f7, f9), new PointF(f7, f11), new PointF(f10, f11)});
        arrayList10.add(new PointF[]{new PointF(f10, f11), new PointF(f7, f11), new PointF(f7, f12), new PointF(f10, f12)});
        this.collageLayoutList.add(new Rabbit_CollageLayout(arrayList10));
    }
}
